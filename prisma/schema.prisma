generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_URI")
}

enum Role {
  USER
  ADMIN
}

enum Size {
  XS
  S
  M
  L
  XL
}


model User {
  id        String   @id @default(uuid())
  email     String   @unique
  password  String
  name      String
  phone     String?
  address   String?
  role      Role     @default(USER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Category {
  id        String     @id @default(uuid())
  name      String
  slug      String     @unique
  parentId  String?
  parent    Category?  @relation("CategoryToParent", fields: [parentId], references: [id])
  children  Category[] @relation("CategoryToParent")
  products   Product[] @relation("category_products")
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}

model Product {
  id          String         @id @default(uuid())
  name        String
  slug        String         @unique
  description String?
  price       Decimal
  oldPrice    Decimal?
  discount    Int? 
  stock       Int            @default(0)
  category    Category       @relation("category_products", fields: [categoryId], references: [id], onDelete: Cascade)
  categoryId  String
  images      ProductImage[] @relation("product_images")
  colors      String[]       @default([])
  sizes       Size[]         @default([])
  isNew       Boolean        @default(false)

  createdAt   DateTime       @default(now())
  updatedAt   DateTime       @updatedAt

  @@map("products")
}

model ProductImage {
  id         String   @id @default(uuid())
  url        String
  isMain     Boolean  @default(false)
  product    Product  @relation("product_images", fields: [productId], references: [id], onDelete: Cascade)
  productId  String
  createdAt  DateTime @default(now())

  @@map("product_images")
}